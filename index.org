#+AUTHOR: Wan Ardie Mejia
#+TITLE: A promising attempt at publishing a website from org-mode
#+OPTIONS: toc:nil
#+EMAIL: wan_ahmad_ardie@yahoo.com
#+hugo_base_dir: /home/ardie/Documents/pulledFromWebsite/my_firstOrgWebsite
#+TAGS: theory practical 
* Hello:
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:EXPORT_HUGO_SECTION: /
:END:
** A website detailing all of my personal .org files
 *How  does one publish to a website directly from Emacs org mode (with the help of [[https://gohugo.io/][hugo]]?)*
    - With the help of [[https://ox-hugo.scripter.co/][ox-hugo]]
 *What are some of the advantages of doing so?*
    - It doesnt interfere with the flow of your thoughts when using Emacs
 *Here is an actual copy of the same org file used to produce this website*
 #+INCLUDE: ./static/indexSnippet.org src org
    - I then only type Ctl-c Ctl-e H A and it auto-publishes to an entire Hugo-compatible tree structure, which is ready to published online.
    - The most easiest (and fastest) process of creating a static site I have tried so far
* Electronics:
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:EXPORT_HUGO_SECTION: electronics
:CUSTOM_ID: electronics1
:END:
** Behold!! A gallore of electronics articles
**  
** [[./static/3.jpg][file:./static/thumbs/th_3.jpg]]
**  
** Transistors:                                                      :theory:
   :PROPERTIES:
   :EXPORT_FILE_NAME: transistors
   :EXPORT_HUGO_SECTION*: electronicscomponents
   :CUSTOM_ID: transistors1
   :END:
*** This page is about transistors
*** We might need to practice overlay single posts with unique layout, with minimal editing of code
*** [[./static/3.jpg][file:./static/thumbs/th_3.jpg]]
*** 
** Triacs:                                                           :theory:
   :PROPERTIES:
   :EXPORT_FILE_NAME: triac
   :EXPORT_HUGO_SECTION*: electronicscomponents
   :CUSTOM_ID: triac1
   :END:
*** This page is about triacs!!!!
*** 
*** [[./static/3.jpg][file:./static/thumbs/th_3.jpg]]
*** 
* Bash: 
** Syntax (numbers and strings)
   :PROPERTIES:
   :EXPORT_FILE_NAME: article1
   :EXPORT_HUGO_SECTION: bash
   :CUSTOM_ID: article1
   :END:
 -  https://stackoverflow.com/questions/1362298/convert-floating-point-variable-to-integer
   - Displaying floating-point in a C-style (printf) manner. Very handy.
 - https://stackoverflow.com/questions/19482123/extract-part-of-a-string-using-bash-cut-split
   - Complete and more elegant way to cut strings into pieces, other than turning it into arrays first.
 - https://stackabuse.com/substrings-in-bash/
   - Some weird but useful ones of string manipulation 
     - using pipe (|) and cut -> | cut
** Syntax (arrays)
   :PROPERTIES:
   :EXPORT_FILE_NAME: article2
   :EXPORT_HUGO_SECTION: bash
   :CUSTOM_ID: article2
   :END:
 - https://opensource.com/article/18/5/you-dont-know-bash-intro-bash-arrays
   - basic array syntax
 - https://linuxhint.com/use-ifs-in-bash/
   - very handy to remember this or keep in this tip close at hand. Dealing with arrays in loops. The site where I learnt this trick:
#+INCLUDE: ./static/bash/syntax1.sh src bash
 - http://www.masteringunixshell.net/qa35/bash-how-to-print-array.html
   - how to print bash array
** Syntax (functions)
   :PROPERTIES:
   :EXPORT_FILE_NAME: article3
   :EXPORT_HUGO_SECTION: bash
   :CUSTOM_ID: article3
   :END:
https://ryanstutorials.net/bash-scripting-tutorial/bash-functions.php
 - functions in Bash allows coder to treat the code like normal terminal usage. So, -- ls -- can have a (script scope) alias using function ls(){ #--some code }. And $1 has the same property.
** Syntax (files and folder)
   :PROPERTIES:
   :EXPORT_FILE_NAME: article4
   :EXPORT_HUGO_SECTION: bash
   :CUSTOM_ID: article4
   :END:
https://www.cyberciti.biz/faq/howto-check-if-a-directory-exists-in-a-bash-shellscript/
** Syntax (case statement, for loops, user input)
   :PROPERTIES:
   :EXPORT_FILE_NAME: article5
   :EXPORT_HUGO_SECTION: bash
   :CUSTOM_ID: article5
   :END:
https://tldp.org/LDP/Bash-Beginners-Guide/html/sect_07_03.html
 - case statements
https://www.thegeekstuff.com/2011/07/bash-for-loop-examples/
 - some VERY USEFUL bash for loops. Some VERY SIMPLE ones. 
https://askubuntu.com/questions/446156/pause-execution-and-wait-for-user-input
 - wait for user input
