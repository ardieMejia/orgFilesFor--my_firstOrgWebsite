#+AUTHOR: Wan Ardie Mejia
#+TITLE: A promising attempt at publishing a website from org-mode
#+OPTIONS: toc:nil
#+EMAIL: wan_ahmad_ardie@yahoo.com
#+hugo_base_dir: /home/ardie/Documents/pulledFromWebsite/my_firstOrgWebsite
#+TAGS: theory practical 
* Hello:
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:EXPORT_HUGO_SECTION: /
:END:
** A website detailing all of my personal .org files
 *How  does one publish to a website directly from Emacs org mode (with the help of [[https://gohugo.io/][hugo]]?)*
    - With the help of [[https://ox-hugo.scripter.co/][ox-hugo]]
 *What are some of the advantages of doing so?*
    - It doesnt interfere with the flow of your thoughts when using Emacs
 *Here is an actual copy of the same org file used to produce this website*
 #+INCLUDE: ./static/indexSnippet.org src org
    - I then only type Ctl-c Ctl-e H A and it auto-publishes to an entire Hugo-compatible tree structure, which is ready to published online.
    - The most easiest (and fastest) process of creating a static site I have tried so far
* Electronics:
** Behold!! A gallore of electronics articles
**  
** [[./static/3.jpg][file:./static/thumbs/th_3.jpg]]
**  
** Transistors:                                                      :theory:
*** This page is about transistors
*** We might need to practice overlay single posts with unique layout, with minimal editing of code
*** [[./static/3.jpg][file:./static/thumbs/th_3.jpg]]
*** 
** Triacs:                                                           :theory:
*** This page is about triacs!!!!
*** 
*** [[./static/3.jpg][file:./static/thumbs/th_3.jpg]]
*** 
* 1)Spacemacs:
   :PROPERTIES:
   :EXPORT_FILE_NAME: _index
   :EXPORT_HUGO_SECTION: docs/spacemacs
   :CUSTOM_ID: _articleIndex
   :END:
** 1) What is Spacemacs?
   :PROPERTIES:
   :EXPORT_FILE_NAME: whatIsSpacemacs
   :EXPORT_HUGO_SECTION: docs/spacemacs
   :CUSTOM_ID: article6
   :END:
 - It is a "flavour" of Emacs
** 2) How does one go about installing Emacs/Spacemacs/Doom Emacs and what not?
   :PROPERTIES:
   :EXPORT_FILE_NAME: howToInstall
   :EXPORT_HUGO_SECTION: docs/spacemacs
   :CUSTOM_ID: article7
   :END:
 - https://github.com/syl20bnr/spacemacs
   - The only link you'll need to start using Spacemacs. 
 - Basically the process to install all variants of Emacs are the same (even when they look completely different!). 
   - You install the base Emacs
   - You install the init folder (basically configuration folder). This is where the real magic of Spacemacs (and in Doom Emacs) happens, where your base program will read this config file everytime it starts, thereby producing a completely different program (depending on the config). 
   - This modification is highly robust (as you will discover that, if you accidentally deleted this config folder (.emacs.d), base Emacs will simply start as default classic and painful Emacs)
   - Theres some more stuff going in the background. But this is good enough to understand
   - It will look like this:
{{% spacamacsDiagram1 %}}



 - My version of emacs is 25.3.2. I recommend you install something later than 25.1 to "get with the times". Just a suggestion. (No, in fact, MAKE SURE above 25.1)
    - Ubuntu 14.04's package manager does not have an updated Emacs. So I found this repository Kevin Kelley. 
    - Instructions can be found [[https://ubuntuhandbook.org/index.php/2017/04/install-emacs-25-ppa-ubuntu-16-04-14-04/][here]]`
    - Or just copy this (same thing):

#+INCLUDE: ./static/bash/syntax2.sh src bash
* 2)Bash: 
   :PROPERTIES:
   :EXPORT_FILE_NAME: _index
   :EXPORT_HUGO_SECTION: docs/bash
   :CUSTOM_ID: _articleIndex
   :END:
** 1) Syntax (numbers and strings)
   :PROPERTIES:
   :EXPORT_FILE_NAME: syntax1
   :EXPORT_HUGO_SECTION: docs/bash
   :CUSTOM_ID: article1
   :END:
 -  https://stackoverflow.com/questions/1362298/convert-floating-point-variable-to-integer
   - Displaying floating-point in a C-style (printf) manner. Very handy.
 - https://stackoverflow.com/questions/19482123/extract-part-of-a-string-using-bash-cut-split
   - Complete and more elegant way to cut strings into pieces, other than turning it into arrays first.
 - https://stackabuse.com/substrings-in-bash/
   - Some weird but useful ones of string manipulation 
     - using pipe (|) and cut -> | cut
** 2) Syntax (arrays)
   :PROPERTIES:
   :EXPORT_FILE_NAME: syntax2
   :EXPORT_HUGO_SECTION: docs/bash
   :CUSTOM_ID: article2
   :END:
 - https://opensource.com/article/18/5/you-dont-know-bash-intro-bash-arrays
   - basic array syntax
 - https://linuxhint.com/use-ifs-in-bash/
   - very handy to remember this or keep in this tip close at hand. Dealing with arrays in loops. The site where I learnt this trick:
#+INCLUDE: ./static/bash/syntax1.sh src bash
 - http://www.masteringunixshell.net/qa35/bash-how-to-print-array.html
   - how to print bash array
** 3) Syntax (functions)
   :PROPERTIES:
   :EXPORT_FILE_NAME: syntax3
   :EXPORT_HUGO_SECTION: docs/bash
   :CUSTOM_ID: article3
   :END:
https://ryanstutorials.net/bash-scripting-tutorial/bash-functions.php
 - functions in Bash allows coder to treat the code like normal terminal usage. So, -- ls -- can have a (script scope) alias using function ls(){ #--some code }. And $1 has the same property.
** 4) Syntax (files and folder)
   :PROPERTIES:
   :EXPORT_FILE_NAME: syntax4
   :EXPORT_HUGO_SECTION: docs/bash
   :CUSTOM_ID: article4
   :END:
https://www.cyberciti.biz/faq/howto-check-if-a-directory-exists-in-a-bash-shellscript/
** 5) Syntax (case statement, for loops, user input)
   :PROPERTIES:
   :EXPORT_FILE_NAME: syntax5
   :EXPORT_HUGO_SECTION: docs/bash
   :CUSTOM_ID: article5
   :END:
https://tldp.org/LDP/Bash-Beginners-Guide/html/sect_07_03.html
 - case statements
https://www.thegeekstuff.com/2011/07/bash-for-loop-examples/
 - some VERY USEFUL bash for loops. Some VERY SIMPLE ones. 
https://askubuntu.com/questions/446156/pause-execution-and-wait-for-user-input
 - wait for user input
